#  ----------------------  最基本的配置 ----------------------

database.driverClassName=com.mysql.jdbc.Driver
database.url=jdbc:mysql:///testdb?characterEncoding=UTF-8
database.dialect =mysql
database.userName=root
database.password=
database.schemaNames=testdb

# dbunit 本身的加载模块 DbUnitModule 有 bug，这个是别人写的示例代码
unitils.module.dbunit.className=org.dbunit.MySqlDbUnitModule

# @DataSet 默认加载 xml 文件，使用下面的类可以用 excel 代替 xml（类是别人写的示例代码）
DbUnitModule.DataSet.factory.default=org.dbunit.dataset.excel.MultiSchemaXlsDataSetFactory
DbUnitModule.ExpectedDataSet.factory.default=org.dbunit.dataset.excel.MultiSchemaXlsDataSetFactory

#  ----------------------  数据源其他配置 ----------------------

# 事务状态，默认为 disabled，可以设置为 commit 或 rollback
DatabaseModule.Transactional.value.default=disabled

# @DataSet 的加载策略，默认为清空表中的数据再将指定文件中的数据加载进表，在 impl 包中有四个实现类，都可以作为选项，下列为默认的配置
DbUnitModule.DataSet.loadStrategy.default=org.unitils.dbunit.datasetloadstrategy.impl.CleanInsertLoadStrategy

#  ----------------------  配置 dbMaintainer ----------------------

# 默认都为 false，设为 true 时，可以配置 ddl 脚本的路径（每次测试时都会加载该文件，文件标准格式为 num_dbname.xml）
updateDataBaseSchema.enabled=true
dbMaintainer.autoCreateExecutedScriptsTable=true
dbMaintainer.script.locations=src/test/resources/ddl

# 是否自动生成数据集的 xsd 文件，默认为 true，需要指定一个目录
#dataSetStructureGenerator.xsd.dirName=resources/generated_xsd
dbMaintainer.generateDataSetStructure.enabled=false